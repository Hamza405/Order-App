{"ast":null,"code":"var _jsxFileName = \"/home/hamza/Desktop/01-starting-project/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cartContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const existingItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingItem = state.items[existingItemIndex];\n    let updatedItem;\n    let updatedItems;\n    let updatedAmount;\n\n    if (existingItem) {\n      updatedItem = { ...existingItem,\n        amount: existingItem.amount + 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingItemIndex] = updatedItem;\n      updatedAmount = state.totalAmount + action.item.price;\n      console.log(\"adadasd\");\n    } else {\n      updatedItems = state.items.concat(action.item);\n      updatedAmount = state.totalAmount + action.item.amount * action.item.price;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedAmount\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const existingItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingItemIndex];\n    const updatedAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.item.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCart] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCart = item => {\n    dispatchCart({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCart = id => {\n    dispatchCart({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCart,\n    removeItem: removeItemFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"ZY2kzjH0eT2UJ8xdytMWU1wIqqA=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","existingItemIndex","findIndex","item","id","existingItem","updatedItem","updatedItems","updatedAmount","amount","price","console","log","concat","filter","CartProvider","props","cartState","dispatchCart","addItemToCart","removeItemFromCart","cartContext","addItem","removeItem","children"],"sources":["/home/hamza/Desktop/01-starting-project/src/store/CartProvider.js"],"sourcesContent":["import { useReducer } from \"react\";\nimport CartContext from \"./cartContext\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const existingItemIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n    const existingItem = state.items[existingItemIndex];\n    let updatedItem;\n    let updatedItems;\n    let updatedAmount;\n\n    if (existingItem) {\n      updatedItem = {\n        ...existingItem,\n        amount: existingItem.amount + 1,\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingItemIndex] = updatedItem;\n      updatedAmount = state.totalAmount + action.item.price;\n      console.log(\"adadasd\");\n    } else {\n      updatedItems = state.items.concat(action.item);\n      updatedAmount =\n        state.totalAmount + action.item.amount * action.item.price;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedAmount,\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const existingItemIndex = state.items.findIndex(\n      (item) => item.id === action.id\n    );\n    const existingItem = state.items[existingItemIndex];\n    const updatedAmount = state.totalAmount - existingItem.price;\n\n    let updatedItems;\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter((item) => item.id !== action.item.id);\n    } else {\n      const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\n      updatedItems = [...state.items];\n      updatedItems[existingItemIndex] = updatedItem;\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedAmount,\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCart] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCart = (item) => {\n    dispatchCart({ type: \"ADD\", item: item });\n  };\n  const removeItemFromCart = (id) => {\n    dispatchCart({ type: \"REMOVE\", id: id });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCart,\n    removeItem: removeItemFromCart,\n  };\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\nexport default CartProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}